#!/bin/bash
echo "Lets build!"
echo "The bootloader"
cd bootloader
./build_bootloaders || exit
cd ..
echo "The drivers"
cd drivers 
./build_drivers || exit
cd ..
echo "The kernel"
cd kernel
./build_kernel || exit
cd ..
echo "The programsapi"
cd programsapi 
./build_programsapi || exit
cd ..
echo "The programs"
cd programs 
./build_programs || exit
cd ..

echo "Update VHD"
guestfish --rw -a hdd.vhd -m /dev/sda1:./ -f diskcmd.nsh || exit
grub-mkrescue -o cdrom.iso bin || exit

if [[ $* == *--install* ]]; then
    echo "Copy all important files to drive /media/sander/SOS"
    [ -d "/media/sander/SOS" ] && cp -r ./bin/* "/media/sander/SOS"
    echo "Copy all important files to drive ${SANDEROS_MOUNT_POINT}"
    cp -r ./bin/* "${SANDEROS_MOUNT_POINT}"
fi
if [[ $* == *--emulate-qemu* ]]; then
    echo "Emulate"
    qemu-system-x86_64 -drive id=disk,file=hdd.vhd,if=none -device ahci,id=ahci -device ide-hd,drive=disk,bus=ahci.0  -trace enable=usb*  -device qemu-xhci,id=xhci -m 256m -cpu qemu64 -drive if=pflash,format=raw,unit=0,file="../OVMF.fd",readonly=on -drive if=pflash,format=raw,unit=1,file="../OVMF.fd" -net none
fi
if [[ $* == *--build-img* ]]; then
    rm -f disk.img
    #VBoxManage clonehd hdd.vhd disk.img --format raw
fi
if [[ $* == *--emulate-bochs* ]]; then
    echo "Emulate"
    rm disk.img
    rm serial.txt
    VBoxManage clonehd hdd.vhd disk.img --format raw
    if [[ $* == *--32* ]]; then
        bochs -q -f bochsdata
    fi
    if [[ $* == *--64* ]]; then
        bochs -q -f bochsefi
    fi
    rm disk.img
fi
echo "Finished!"